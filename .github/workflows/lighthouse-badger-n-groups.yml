# Lighthouse-Badger-N-Groups | GitHub Action Workflow
# 
# Description: Generates, adds & updates manually/automatically Lighthouse badges & reports for different input URL-groups to a selected target repository & branch
# Author: Sitdisch
# Source: https://github.com/myactionway/lighthouse-badger-workflows
# License: MIT
# Copyright (c) 2021 Sitdisch

name: 'Lighthouse-Badger-N-Groups'

########################################################################
# DEFINE YOUR DEFAULTS (TOKEN, INPUTS & TRIGGERS) IN THE FOLLOWING
########################################################################

# TOKEN and INPUTS as environmental variables (env)
env:
  # Token for all triggers (INSERT ONLY THE NAME NEVER THE REAL VALUE)
  TOKEN: # insert ${{ secrets.<TOKEN_NAME> }} and replace <TOKEN_NAME>
  # To change predefined INPUT values, just override them
  REPOSITORY: ${{ github.repository }} # target repository (predefined: repo with this file)
  BRANCH: 'master' # target branch
  USER-NAME: 'github-actions[bot]' # user who should commit
  USER-EMAIL: '41898282+github-actions[bot]@users.noreply.github.com'
  COMMIT-MESSAGE: 'Lighthouse-Badger[bot]: Results Added'
  RESULTS-TYPE: 'both' # 'mobile', 'desktop' or 'both'
  MOBILE-LIGHTHOUSE-PARAMS: '--throttling.cpuSlowdownMultiplier=2' # Lighthouse parameters mobile audit
  DESKTOP-LIGHTHOUSE-PARAMS: '--preset=desktop --throttling.cpuSlowdownMultiplier=1' # Lighthouse parameters desktop audit

# TRIGGERS
on:
  # page_build:
  # schedule: # Check your schedule here => https://crontab.guru/
  #   - cron: '55 23 * * 0' # e.g. every Sunday at 23:55
  workflow_dispatch:
    # No predefined inputs; The environmental variables defined in this file are used instead when this trigger is triggered.

########################################################################
# YOU CAN JUMP TO THE FIRST URL-GROUP DEFINITION BELOW
########################################################################
# CONSIDER:
#   - You can't change TOKEN, REPOSITORY, BRANCH, USER-NAME, USER-EMAIL and COMMIT-MESSAGE for the different URL-groups 
#   - this is possible with the lighthouse-badger-n-targets.yml; get it here https://github.com/MyActionWay/lighthouse-badger-workflows/tree/master/.github/workflows

# Jobs
jobs:
  lighthouse-badger-n-groups:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          repository: ${{ env.REPOSITORY }}
          token: ${{ env.TOKEN }}
          ref: ${{env.BRANCH }}
      - uses: actions/checkout@v2
        with:
          repository: 'myactionway/lighthouse-badges'
          path: temp_lighthouse_badges_nested
      - name: Parallel Result Computation
        run: |
          source temp_lighthouse_badges_nested/lighthouse_badger_action.sh
          #
          # FIRST URL-GROUP | DEFINE YOUR ENV IN THE FOLLOWING
          #
          {
            URLS='https://github.com/sitdisch https://github.com/mythemeway';
            BADGES_ARGS='-b pagespeed -o lighthouse_results/first_group -r';
            RESULTS_TYPE='${{ env.RESULTS-TYPE }}';
            MOBILE_LIGHTHOUSE_PARAMS='${{ env.MOBILE-LIGHTHOUSE-PARAMS }}';
            DESKTOP_LIGHTHOUSE_PARAMS='${{ env.DESKTOP-LIGHTHOUSE-PARAMS }}';
            # THAT'S IT; JUMP TO THE NEXT URL-GROUP
            lighthouse_badger_action
          } &
          #
          # SECOND URL-GROUP | DEFINE YOUR ENV IN THE FOLLOWING
          #
          {
            URLS='https://mythemeway.github.io/Dark-Particle/ https://mythemeway.github.io/Dark-Particle/projects/2020/10/31/project-1.html';
            BADGES_ARGS='-b flat -o lighthouse_results/second_group -r';
            RESULTS_TYPE='${{ env.RESULTS-TYPE }}';
            MOBILE_LIGHTHOUSE_PARAMS='${{ env.MOBILE-LIGHTHOUSE-PARAMS }}';
            DESKTOP_LIGHTHOUSE_PARAMS='${{ env.DESKTOP-LIGHTHOUSE-PARAMS }}';
            # THAT'S IT; JUMP TO THE NEXT URL-GROUP
            lighthouse_badger_action
          } &
          # 
          # THIRD URL-GROUP | FEEL FREE TO ADD MORE URL-GROUPS LIKE ABOVE
          # 
          # ...
          # 
          # RUN'S END | YOU DON'T HAVE TO DEFINE ANYTHING HERE 
          wait
          git config --local user.email ${{ env.USER-EMAIL }}
          git config --local user.name ${{ env.USER-NAME }}
          git pull
          git add --all -- :!temp_lighthouse_badges_nested
          git commit -am "${{ env.COMMIT-MESSAGE }}"
          git push
